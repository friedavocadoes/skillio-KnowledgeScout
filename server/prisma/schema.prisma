// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  passwordHash String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  documents Document[]
  queries   Query[]

  @@map("users")
}

model Document {
  id           String    @id @default(cuid())
  userId       String
  filename     String
  originalName String
  fileType     String
  fileSize     Int
  uploadDate   DateTime  @default(now())
  isPrivate    Boolean   @default(true)
  shareToken   String?   @unique
  content      String?   // Extracted text content
  processedAt  DateTime?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  queries Query[]

  @@map("documents")
}

model Query {
  id          String    @id @default(cuid())
  userId      String
  documentId  String
  query       String
  response    String
  sources     String?   // JSON string of sources
  createdAt   DateTime  @default(now())
  cachedUntil DateTime?

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@map("queries")
}

model IdempotencyKey {
  id        String   @id @default(cuid())
  key       String   @unique
  userId    String
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@map("idempotency_keys")
}

